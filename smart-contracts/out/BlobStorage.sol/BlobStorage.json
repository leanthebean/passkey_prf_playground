{"abi":[{"type":"function","name":"blobExistsForKey","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"deleteBlob","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getBlob","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getBlobCount","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobOwner","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBlobSize","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"storeBlob","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BlobDeleted","inputs":[{"name":"key","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BlobStored","inputs":[{"name":"key","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"size","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610957806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638b5b67a61161005b5780638b5b67a6146100e7578063c2b8cfe5146100fa578063cb47256d1461012d578063d564f32f1461014e57600080fd5b80631870730a1461008257806388a1ad7b146100b25780638a4d1ad4146100c7575b600080fd5b610095610090366004610680565b610161565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c0366004610680565b6101b4565b005b6100da6100d5366004610680565b6102ca565b6040516100a99190610699565b6100c56100f53660046106e7565b610399565b61011d610108366004610680565b60009081526002602052604090205460ff1690565b60405190151581526020016100a9565b61014061013b366004610680565b610570565b6040519081526020016100a9565b61014061015c366004610763565b6105be565b60008181526002602052604081205460ff166101985760405162461bcd60e51b815260040161018f9061078c565b60405180910390fd5b506000908152600160205260409020546001600160a01b031690565b60008181526002602052604090205460ff166101e25760405162461bcd60e51b815260040161018f9061078c565b6000818152600160205260409020546001600160a01b031633146102585760405162461bcd60e51b815260206004820152602760248201527f426c6f6253746f726167653a204f6e6c79206f776e65722063616e2064656c656044820152663a3290313637b160c91b606482015260840161018f565b600081815260208190526040812061026f9161062a565b600081815260016020908152604080832080546001600160a01b03191690556002909152808220805460ff1916905551339183917f10dfb28015f2bbcf6ee3523b49d522da1c5bb6c81c18860487a7a16444cd8c799190a350565b60008181526002602052604090205460609060ff166102fb5760405162461bcd60e51b815260040161018f9061078c565b60008281526020819052604090208054610314906107c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906107c1565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b50505050509050919050565b806103f25760405162461bcd60e51b8152602060048201526024808201527f426c6f6253746f726167653a2043616e6e6f742073746f726520656d70747920604482015263313637b160e11b606482015260840161018f565b621000008111156104535760405162461bcd60e51b815260206004820152602560248201527f426c6f6253746f726167653a20426c6f6220746f6f206c6172676520286d617860448201526420314d422960d81b606482015260840161018f565b60008381526002602052604090205460ff16156104e5576000838152600160205260409020546001600160a01b031633146104e05760405162461bcd60e51b815260206004820152602760248201527f426c6f6253746f726167653a204f6e6c79206f776e65722063616e20757064616044820152663a3290313637b160c91b606482015260840161018f565b61051a565b600083815260016020818152604080842080546001600160a01b031916331790556002909152909120805460ff191690911790555b6000838152602081905260409020610533828483610860565b50604051818152339084907fc642b4924fd2009f8298c07f47dab8fcd2fd90ca361aa409232c6e81ab8d8d539060200160405180910390a3505050565b60008181526002602052604081205460ff1661059e5760405162461bcd60e51b815260040161018f9061078c565b600082815260208190526040902080546105b7906107c1565b9392505050565b60405162461bcd60e51b815260206004820152603660248201527f426c6f6253746f726167653a20557365206576656e747320746f20747261636b60448201527510313637b11031b7bab73a399037b33316b1b430b4b760511b6064820152600090819060840161018f565b508054610636906107c1565b6000825580601f10610646575050565b601f0160209004906000526020600020908101906106649190610667565b50565b5b8082111561067c5760008155600101610668565b5090565b60006020828403121561069257600080fd5b5035919050565b600060208083528351808285015260005b818110156106c6578581018301518582016040015282016106aa565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806000604084860312156106fc57600080fd5b83359250602084013567ffffffffffffffff8082111561071b57600080fd5b818601915086601f83011261072f57600080fd5b81358181111561073e57600080fd5b87602082850101111561075057600080fd5b6020830194508093505050509250925092565b60006020828403121561077557600080fd5b81356001600160a01b03811681146105b757600080fd5b6020808252818101527f426c6f6253746f726167653a20426c6f6220646f6573206e6f74206578697374604082015260600190565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561085b57600081815260208120601f850160051c810160208610156108385750805b601f850160051c820191505b8181101561085757828155600101610844565b5050505b505050565b67ffffffffffffffff831115610878576108786107fb565b61088c8361088683546107c1565b83610811565b6000601f8411600181146108c057600085156108a85750838201355b600019600387901b1c1916600186901b17835561091a565b600083815260209020601f19861690835b828110156108f157868501358255602094850194600190920191016108d1565b508682101561090e5760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212205f7b899c773915ed8ccaf01dd1bd1276781e76add159b79a34dd7320c276928564736f6c63430008130033","sourceMap":"259:3737:19:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638b5b67a61161005b5780638b5b67a6146100e7578063c2b8cfe5146100fa578063cb47256d1461012d578063d564f32f1461014e57600080fd5b80631870730a1461008257806388a1ad7b146100b25780638a4d1ad4146100c7575b600080fd5b610095610090366004610680565b610161565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c0366004610680565b6101b4565b005b6100da6100d5366004610680565b6102ca565b6040516100a99190610699565b6100c56100f53660046106e7565b610399565b61011d610108366004610680565b60009081526002602052604090205460ff1690565b60405190151581526020016100a9565b61014061013b366004610680565b610570565b6040519081526020016100a9565b61014061015c366004610763565b6105be565b60008181526002602052604081205460ff166101985760405162461bcd60e51b815260040161018f9061078c565b60405180910390fd5b506000908152600160205260409020546001600160a01b031690565b60008181526002602052604090205460ff166101e25760405162461bcd60e51b815260040161018f9061078c565b6000818152600160205260409020546001600160a01b031633146102585760405162461bcd60e51b815260206004820152602760248201527f426c6f6253746f726167653a204f6e6c79206f776e65722063616e2064656c656044820152663a3290313637b160c91b606482015260840161018f565b600081815260208190526040812061026f9161062a565b600081815260016020908152604080832080546001600160a01b03191690556002909152808220805460ff1916905551339183917f10dfb28015f2bbcf6ee3523b49d522da1c5bb6c81c18860487a7a16444cd8c799190a350565b60008181526002602052604090205460609060ff166102fb5760405162461bcd60e51b815260040161018f9061078c565b60008281526020819052604090208054610314906107c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906107c1565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b50505050509050919050565b806103f25760405162461bcd60e51b8152602060048201526024808201527f426c6f6253746f726167653a2043616e6e6f742073746f726520656d70747920604482015263313637b160e11b606482015260840161018f565b621000008111156104535760405162461bcd60e51b815260206004820152602560248201527f426c6f6253746f726167653a20426c6f6220746f6f206c6172676520286d617860448201526420314d422960d81b606482015260840161018f565b60008381526002602052604090205460ff16156104e5576000838152600160205260409020546001600160a01b031633146104e05760405162461bcd60e51b815260206004820152602760248201527f426c6f6253746f726167653a204f6e6c79206f776e65722063616e20757064616044820152663a3290313637b160c91b606482015260840161018f565b61051a565b600083815260016020818152604080842080546001600160a01b031916331790556002909152909120805460ff191690911790555b6000838152602081905260409020610533828483610860565b50604051818152339084907fc642b4924fd2009f8298c07f47dab8fcd2fd90ca361aa409232c6e81ab8d8d539060200160405180910390a3505050565b60008181526002602052604081205460ff1661059e5760405162461bcd60e51b815260040161018f9061078c565b600082815260208190526040902080546105b7906107c1565b9392505050565b60405162461bcd60e51b815260206004820152603660248201527f426c6f6253746f726167653a20557365206576656e747320746f20747261636b60448201527510313637b11031b7bab73a399037b33316b1b430b4b760511b6064820152600090819060840161018f565b508054610636906107c1565b6000825580601f10610646575050565b601f0160209004906000526020600020908101906106649190610667565b50565b5b8082111561067c5760008155600101610668565b5090565b60006020828403121561069257600080fd5b5035919050565b600060208083528351808285015260005b818110156106c6578581018301518582016040015282016106aa565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806000604084860312156106fc57600080fd5b83359250602084013567ffffffffffffffff8082111561071b57600080fd5b818601915086601f83011261072f57600080fd5b81358181111561073e57600080fd5b87602082850101111561075057600080fd5b6020830194508093505050509250925092565b60006020828403121561077557600080fd5b81356001600160a01b03811681146105b757600080fd5b6020808252818101527f426c6f6253746f726167653a20426c6f6220646f6573206e6f74206578697374604082015260600190565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561085b57600081815260208120601f850160051c810160208610156108385750805b601f850160051c820191505b8181101561085757828155600101610844565b5050505b505050565b67ffffffffffffffff831115610878576108786107fb565b61088c8361088683546107c1565b83610811565b6000601f8411600181146108c057600085156108a85750838201355b600019600387901b1c1916600186901b17835561091a565b600083815260209020601f19861690835b828110156108f157868501358255602094850194600190920191016108d1565b508682101561090e5760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212205f7b899c773915ed8ccaf01dd1bd1276781e76add159b79a34dd7320c276928564736f6c63430008130033","sourceMap":"259:3737:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:176;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:23;;;345:51;;333:2;318:18;2298:176:19;;;;;;;;2911:362;;;;;;:::i;:::-;;:::i;:::-;;1715:171;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:657::-;;;;;;:::i;:::-;;:::i;2050:107::-;;;;;;:::i;:::-;2112:4;2135:15;;;:10;:15;;;;;;;;;2050:107;;;;1787:14:23;;1780:22;1762:41;;1750:2;1735:18;2050:107:19;1622:187:23;2614:177:19;;;;;;:::i;:::-;;:::i;:::-;;;1960:25:23;;;1948:2;1933:18;2614:177:19;1814::23;3515:479:19;;;;;;:::i;:::-;;:::i;2298:176::-;2356:7;2383:15;;;:10;:15;;;;;;;;2375:60;;;;-1:-1:-1;;;2375:60:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2452:15:19;;;;:10;:15;;;;;;-1:-1:-1;;;;;2452:15:19;;2298:176::o;2911:362::-;2971:15;;;;:10;:15;;;;;;;;2963:60;;;;-1:-1:-1;;;2963:60:19;;;;;;;:::i;:::-;3041:15;;;;:10;:15;;;;;;-1:-1:-1;;;;;3041:15:19;3060:10;3041:29;3033:81;;;;-1:-1:-1;;;3033:81:19;;2850:2:23;3033:81:19;;;2832:21:23;2889:2;2869:18;;;2862:30;2928:34;2908:18;;;2901:62;-1:-1:-1;;;2979:18:23;;;2972:37;3026:19;;3033:81:19;2648:403:23;3033:81:19;3140:5;:10;;;;;;;;;;3133:17;;;:::i;:::-;3167:15;;;;:10;:15;;;;;;;;3160:22;;-1:-1:-1;;;;;;3160:22:19;;;3199:10;:15;;;;;;3192:22;;-1:-1:-1;;3192:22:19;;;3238:28;3255:10;;3178:3;;3238:28;;3167:15;3238:28;2911:362;:::o;1715:171::-;1800:15;;;;:10;:15;;;;;;1768:12;;1800:15;;1792:60;;;;-1:-1:-1;;;1792:60:19;;;;;;;:::i;:::-;1869:5;:10;;;;;;;;;;1862:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:171;;;:::o;918:657::-;998:15;990:64;;;;-1:-1:-1;;;990:64:19;;3643:2:23;990:64:19;;;3625:21:23;3682:2;3662:18;;;3655:30;3721:34;3701:18;;;3694:62;-1:-1:-1;;;3772:18:23;;;3765:34;3816:19;;990:64:19;3441:400:23;990:64:19;1087:11;1072:26;;;1064:76;;;;-1:-1:-1;;;1064:76:19;;4048:2:23;1064:76:19;;;4030:21:23;4087:2;4067:18;;;4060:30;4126:34;4106:18;;;4099:62;-1:-1:-1;;;4177:18:23;;;4170:35;4222:19;;1064:76:19;3846:401:23;1064:76:19;1215:15;;;;:10;:15;;;;;;;;1211:267;;;1254:15;;;;:10;:15;;;;;;-1:-1:-1;;;;;1254:15:19;1273:10;1254:29;1246:81;;;;-1:-1:-1;;;1246:81:19;;4454:2:23;1246:81:19;;;4436:21:23;4493:2;4473:18;;;4466:30;4532:34;4512:18;;;4505:62;-1:-1:-1;;;4583:18:23;;;4576:37;4630:19;;1246:81:19;4252:403:23;1246:81:19;1211:267;;;1403:15;;;;:10;:15;;;;;;;;:28;;-1:-1:-1;;;;;;1403:28:19;1421:10;1403:28;;;1445:10;:15;;;;;;:22;;-1:-1:-1;;1445:22:19;;;;;;1211:267;1496:5;:10;;;;;;;;;;:17;1509:4;;1496:10;:17;:::i;:::-;-1:-1:-1;1528:40:19;;1960:25:23;;;1544:10:19;;1539:3;;1528:40;;1948:2:23;1933:18;1528:40:19;;;;;;;918:657;;;:::o;2614:177::-;2671:7;2698:15;;;:10;:15;;;;;;;;2690:60;;;;-1:-1:-1;;;2690:60:19;;;;;;;:::i;:::-;2767:5;:10;;;;;;;;;;:17;;;;;:::i;:::-;;2614:177;-1:-1:-1;;;2614:177:19:o;3515:479::-;3923:64;;-1:-1:-1;;;3923:64:19;;7046:2:23;3923:64:19;;;7028:21:23;7085:2;7065:18;;;7058:30;7124:34;7104:18;;;7097:62;-1:-1:-1;;;7175:18:23;;;7168:52;3575:7:19;;;;7237:19:23;;3923:64:19;6844:418:23;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:180:23:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:23;;14:180;-1:-1:-1;14:180:23:o;407:546::-;517:4;546:2;575;564:9;557:21;607:6;601:13;650:6;645:2;634:9;630:18;623:34;675:1;685:140;699:6;696:1;693:13;685:140;;;794:14;;;790:23;;784:30;760:17;;;779:2;756:26;749:66;714:10;;685:140;;;689:3;874:1;869:2;860:6;849:9;845:22;841:31;834:42;944:2;937;933:7;928:2;920:6;916:15;912:29;901:9;897:45;893:54;885:62;;;;407:546;;;;:::o;958:659::-;1037:6;1045;1053;1106:2;1094:9;1085:7;1081:23;1077:32;1074:52;;;1122:1;1119;1112:12;1074:52;1158:9;1145:23;1135:33;;1219:2;1208:9;1204:18;1191:32;1242:18;1283:2;1275:6;1272:14;1269:34;;;1299:1;1296;1289:12;1269:34;1337:6;1326:9;1322:22;1312:32;;1382:7;1375:4;1371:2;1367:13;1363:27;1353:55;;1404:1;1401;1394:12;1353:55;1444:2;1431:16;1470:2;1462:6;1459:14;1456:34;;;1486:1;1483;1476:12;1456:34;1531:7;1526:2;1517:6;1513:2;1509:15;1505:24;1502:37;1499:57;;;1552:1;1549;1542:12;1499:57;1583:2;1579;1575:11;1565:21;;1605:6;1595:16;;;;;958:659;;;;;:::o;1996:286::-;2055:6;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2150:23;;-1:-1:-1;;;;;2202:31:23;;2192:42;;2182:70;;2248:1;2245;2238:12;2287:356;2489:2;2471:21;;;2508:18;;;2501:30;2567:34;2562:2;2547:18;;2540:62;2634:2;2619:18;;2287:356::o;3056:380::-;3135:1;3131:12;;;;3178;;;3199:61;;3253:4;3245:6;3241:17;3231:27;;3199:61;3306:2;3298:6;3295:14;3275:18;3272:38;3269:161;;3352:10;3347:3;3343:20;3340:1;3333:31;3387:4;3384:1;3377:15;3415:4;3412:1;3405:15;3269:161;;3056:380;;;:::o;4660:127::-;4721:10;4716:3;4712:20;4709:1;4702:31;4752:4;4749:1;4742:15;4776:4;4773:1;4766:15;4917:544;5018:2;5013:3;5010:11;5007:448;;;5054:1;5079:5;5075:2;5068:17;5124:4;5120:2;5110:19;5194:2;5182:10;5178:19;5175:1;5171:27;5165:4;5161:38;5230:4;5218:10;5215:20;5212:47;;;-1:-1:-1;5253:4:23;5212:47;5308:2;5303:3;5299:12;5296:1;5292:20;5286:4;5282:31;5272:41;;5363:82;5381:2;5374:5;5371:13;5363:82;;;5426:17;;;5407:1;5396:13;5363:82;;;5367:3;;;5007:448;4917:544;;;:::o;5637:1202::-;5759:18;5754:3;5751:27;5748:53;;;5781:18;;:::i;:::-;5810:93;5899:3;5859:38;5891:4;5885:11;5859:38;:::i;:::-;5853:4;5810:93;:::i;:::-;5929:1;5954:2;5949:3;5946:11;5971:1;5966:615;;;;6625:1;6642:3;6639:93;;;-1:-1:-1;6698:19:23;;;6685:33;6639:93;-1:-1:-1;;5594:1:23;5590:11;;;5586:24;5582:29;5572:40;5618:1;5614:11;;;5569:57;6745:78;;5939:894;;5966:615;4864:1;4857:14;;;4901:4;4888:18;;-1:-1:-1;;6002:17:23;;;6102:9;6124:229;6138:7;6135:1;6132:14;6124:229;;;6227:19;;;6214:33;6199:49;;6334:4;6319:20;;;;6287:1;6275:14;;;;6154:12;6124:229;;;6128:3;6381;6372:7;6369:16;6366:159;;;6505:1;6501:6;6495:3;6489;6486:1;6482:11;6478:21;6474:34;6470:39;6457:9;6452:3;6448:19;6435:33;6431:79;6423:6;6416:95;6366:159;;;6568:1;6562:3;6559:1;6555:11;6551:19;6545:4;6538:33;5939:894;;;5637:1202;;;:::o","linkReferences":{}},"methodIdentifiers":{"blobExistsForKey(bytes32)":"c2b8cfe5","deleteBlob(bytes32)":"88a1ad7b","getBlob(bytes32)":"8a4d1ad4","getBlobCount(address)":"d564f32f","getBlobOwner(bytes32)":"1870730a","getBlobSize(bytes32)":"cb47256d","storeBlob(bytes32,bytes)":"8b5b67a6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"BlobDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"BlobStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"blobExistsForKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"deleteBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getBlob\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getBlobCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getBlobOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getBlobSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"storeBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple contract to store blob data associated with passkey-derived keys\",\"kind\":\"dev\",\"methods\":{\"blobExistsForKey(bytes32)\":{\"details\":\"Check if a blob exists for a given key\",\"params\":{\"key\":\"The key to check\"},\"returns\":{\"_0\":\"True if the blob exists, false otherwise\"}},\"deleteBlob(bytes32)\":{\"details\":\"Delete a blob (only owner can delete)\",\"params\":{\"key\":\"The key of the blob to delete\"}},\"getBlob(bytes32)\":{\"details\":\"Retrieve a blob by its key\",\"params\":{\"key\":\"The key of the blob to retrieve\"},\"returns\":{\"_0\":\"The blob data\"}},\"getBlobCount(address)\":{\"details\":\"Get total number of blobs stored by an address\",\"params\":{\"owner\":\"The address to check\"},\"returns\":{\"_0\":\"The count of blobs owned by the address\"}},\"getBlobOwner(bytes32)\":{\"details\":\"Get the owner of a blob\",\"params\":{\"key\":\"The key of the blob\"},\"returns\":{\"_0\":\"The address of the blob owner\"}},\"getBlobSize(bytes32)\":{\"details\":\"Get the size of a blob\",\"params\":{\"key\":\"The key of the blob\"},\"returns\":{\"_0\":\"The size of the blob in bytes\"}},\"storeBlob(bytes32,bytes)\":{\"details\":\"Store a blob of data with a given key\",\"params\":{\"data\":\"The blob data to store\",\"key\":\"The key to associate with the blob (typically derived from passkey PRF)\"}}},\"title\":\"BlobStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBlobCount(address)\":{\"notice\":\"This is an expensive operation for large datasets\"}},\"notice\":\"This contract allows storing arbitrary data blobs that can be retrieved later\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BlobStorage.sol\":\"BlobStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/BlobStorage.sol\":{\"keccak256\":\"0xe970582b3478a864df636d1f01b7ebb7699ff023b3d54903cb7259c1e47d92fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d16688301f28bee581fbe7aed20a51b795b64fbf82b760bf4f125de5a5395038\",\"dweb:/ipfs/QmVjKasokbapZeMJUhkjKcbYvqKP8VJTcrxen9q3tE8x1c\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"BlobDeleted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"size","type":"uint256","indexed":false}],"type":"event","name":"BlobStored","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"blobExistsForKey","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deleteBlob"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBlob","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"getBlobCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBlobOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBlobSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"storeBlob"}],"devdoc":{"kind":"dev","methods":{"blobExistsForKey(bytes32)":{"details":"Check if a blob exists for a given key","params":{"key":"The key to check"},"returns":{"_0":"True if the blob exists, false otherwise"}},"deleteBlob(bytes32)":{"details":"Delete a blob (only owner can delete)","params":{"key":"The key of the blob to delete"}},"getBlob(bytes32)":{"details":"Retrieve a blob by its key","params":{"key":"The key of the blob to retrieve"},"returns":{"_0":"The blob data"}},"getBlobCount(address)":{"details":"Get total number of blobs stored by an address","params":{"owner":"The address to check"},"returns":{"_0":"The count of blobs owned by the address"}},"getBlobOwner(bytes32)":{"details":"Get the owner of a blob","params":{"key":"The key of the blob"},"returns":{"_0":"The address of the blob owner"}},"getBlobSize(bytes32)":{"details":"Get the size of a blob","params":{"key":"The key of the blob"},"returns":{"_0":"The size of the blob in bytes"}},"storeBlob(bytes32,bytes)":{"details":"Store a blob of data with a given key","params":{"data":"The blob data to store","key":"The key to associate with the blob (typically derived from passkey PRF)"}}},"version":1},"userdoc":{"kind":"user","methods":{"getBlobCount(address)":{"notice":"This is an expensive operation for large datasets"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/BlobStorage.sol":"BlobStorage"},"evmVersion":"paris","libraries":{}},"sources":{"src/BlobStorage.sol":{"keccak256":"0xe970582b3478a864df636d1f01b7ebb7699ff023b3d54903cb7259c1e47d92fa","urls":["bzz-raw://d16688301f28bee581fbe7aed20a51b795b64fbf82b760bf4f125de5a5395038","dweb:/ipfs/QmVjKasokbapZeMJUhkjKcbYvqKP8VJTcrxen9q3tE8x1c"],"license":"MIT"}},"version":1},"id":19}